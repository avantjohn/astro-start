---
import { Icon } from 'astro-icon/components'

interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'link'
  size?: 'sm' | 'md' | 'lg'
  text?: string
  icon?: string
  href?: string
  class?: string
  reverse?: boolean
  target?: string
}

const {
  variant = 'primary',
  size = 'md',
  text,
  icon,
  href,
  class: className,
  reverse,
  target = href?.startsWith('http') ? '_blank' : undefined,
  ...rest
} = Astro.props

const Element = href ? 'a' : 'button'
const baseClass = [
  'button',
  `button--${variant}`,
  `button--${size}`,
  reverse && 'button--reverse',
  className
].filter(Boolean).join(' ')
---

<Element class={baseClass} href={href} target={target} {...rest}>
  <span class="button__content">
    {text && <Fragment set:html={text} />}
    <slot />
  </span>
  {icon && <Icon name={icon} class="button__icon" />}
</Element>

<style>
  .button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    white-space: nowrap;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    line-height: 1;
    cursor: pointer;
    transition: colors 0.2s;
  }

  .button:focus-visible {
    outline: none;
    ring: 2px solid var(--ring-color);
    ring-offset: 2px;
  }

  .button:disabled {
    pointer-events: none;
    opacity: 0.5;
  }

  /* Size variants */
  .button--sm {
    height: 2.25rem;
    min-height: 2.25rem;
    min-width: 2.25rem;
    padding: 0 0.5rem;
  }

  .button--md {
    height: 2.5rem;
    min-height: 2.5rem;
    min-width: 2.5rem;
    padding: 0 1rem;
  }

  .button--lg {
    height: 2.75rem;
    min-height: 2.75rem;
    min-width: 2.75rem;
    padding: 0 1.25rem;
  }

  /* Variant styles */
  .button--primary {
    background-color: var(--primary-color);
    color: var(--primary-foreground);
  }

  .button--primary:hover {
    background-color: var(--primary-hover);
  }

  .button--secondary {
    background-color: var(--secondary-color);
    color: var(--secondary-foreground);
  }

  .button--secondary:hover {
    background-color: var(--secondary-hover);
  }

  .button--outline {
    border: 1px solid var(--input-color);
    color: var(--accent-foreground);
  }

  .button--outline:hover {
    background-color: var(--secondary-hover);
  }

  .button--link {
    color: var(--accent-foreground);
  }

  .button--link:hover {
    background-color: var(--secondary-hover);
  }

  /* Icon styles */
  .button__icon {
    display: inline-flex;
    width: 0.875rem;
    height: 0.875rem;
  }

  .button__icon:first-child:last-child {
    position: absolute;
  }

  /* Content styles */
  .button__content {
    color: inherit;
  }

  /* Reverse modifier */
  .button--reverse .button__icon {
    order: 1;
  }
</style>
