---
import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

import '../styles/global/css-reset.css';
import '../styles/theme/colors-core.css';
import '../styles/theme/colors-theme.css';
import '../styles/theme/fonts-theme.css';
import '../styles/theme/spacing-theme.css';
import '../styles/theme/borders-theme.css';

type Props = CollectionEntry<'blog'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>
	<body>
		<Header />
		<main>
			<article>
				<div class="article-container">
					<div class="hero grid-columns">
						<div class="hero-image">
							{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
						</div>
						<div class="title">
							<div class="date">
								<FormattedDate date={pubDate} />
								{
									updatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={updatedDate} />
										</div>
									)
								}
							</div>
							<h1>{title}</h1> 
						</div>
					</div>
					<div class="grid-columns">
						<div class="content-container">
							<slot />
						</div>
					</div>
				</div>
			</article>
		</main>
		<Footer />
		<script src="../scripts/app.ts"></script>
	</body>
</html>

<style>

	.hero {
		gap: 2rem;
		padding: 0;
	}
	.hero-image {
		grid-column: 1 / 13;
		height: 50vh;
	}

	.hero-image img {
		width: 100%;
		height: 100%;
		object-fit: cover;
	}

	.title {	
		grid-column: 2 / 12;
		display: flex;
		flex-direction: column;
		gap: 2rem;
		border-bottom: 1px solid #ffffff14;
		padding-bottom: 3rem;
	}

	.content-container {
		grid-column: 2 / 12;
		padding: 4rem 0;
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}
</style>
